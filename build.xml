<?xml version="1.0"?>
<project name="MMBase" default="rmmci" basedir=".">
  <property file="../build.properties" />

  <property name="source.dir" value="../.."/>
  <property file="${source.dir}/build.properties" />
  <property name="build.dir"    value="${source.dir}/build" /><!-- mmbase build dir -->
  <property name="download.dir" value="${build.dir}/download" />
  <property name="expand.dir"   value="${download.dir}/expanded" />
  <property file="${source.dir}/build.properties.version" />
  <property file="${source.dir}/build.properties.default" />

  <property name="project.jar.dir" value="build"/>
  <property name="project.zip.dir" value="${project.jar.dir}"/>
  <property name="build.dir" value="${source.dir}/build"/>
  <target name="init">
    <mkdir dir="build/classes"/>
    <available property="dummy" classname="dummy">
      <classpath id="classpath">
        <fileset dir="${build.dir}/lib">
          <include name="*.jar"/>
        </fileset>
        <fileset dir="${build.dir}">
          <include name="mmbase.jar"/>
        </fileset>
      </classpath>
    </available>
    <tstamp/>
    <property name="builddate"       value="${DSTAMP}"/>
    <property name="zip.name"      value="mmbase-${distro.version}.${builddate}-rmmci" />
    <property name="project.zip"     value="${project.zip.dir}/${zip.name}.zip" />
  </target>

  <target name="jar.uptodatecheck">
    <uptodate property="jar.uptodate" targetfile="${project.jar.dir}/mmbase-rmmci-server.jar">
      <srcfiles dir="build/classes" includes="**/*"/>
    </uptodate>
  </target>

  <target name="package" depends="init,rmmci">
    <zip zipfile="${project.zip}">
      <fileset dir="${project.jar.dir}" includes="*.jar"/>
      <fileset dir=".">
        <patternset id="package.files">
          <include name="**"/>
          <exclude name="*.xml"/>
          <exclude name="build/**"/>
          <exclude name="src/**"/>
        </patternset>
      </fileset>
    </zip>
  </target>
<!-- =================================================================== -->
<!-- (Step 1 for remote) Compile the remote generator classes            -->
<!-- =================================================================== -->
  <target name="compile.remote.generator" description="Compile the remote generator classes" depends="init">
    <javac srcdir="src"
           destdir="build/classes"
           classpathref="classpath"
           debug="yes"
           source="1.5"
           optimize="yes">
      <include name="org/mmbase/bridge/remote/generator/*.java"/>
      <include name="org/mmbase/servlet/rmi/*.java"/>
    </javac>
  </target>
<!-- =================================================================== -->
<!-- check if MMCI.xml is present                                        -->
<!-- =================================================================== -->
  <target name="check.mmci.xml.present" description="check if MMCI.xml is present" depends="init">
    <available property="mmci.xml.present" file="build/src/MMCI.xml"/>
  </target>
<!-- =================================================================== -->
<!-- (Step 2 for remote) Generate the source for the remote classes      -->
<!-- =================================================================== -->
  <target name="generate.remote" description="Generate the source for the remote classes" depends="init,compile.remote.generator,check.mmci.xml.present" unless="mmci.xml.present">
    <mkdir dir="build/src/org/mmbase/bridge/remote"/>
<!-- fork="true" is needed because MMBase uses some xerces classes directly but ant is
       using the sun jaxp implementation. By forking we do not use the ant classloader -->
    <java classname="org.mmbase.bridge.remote.generator.RMMCI" fork="true" classpathref="classpath">
      <arg value="build/src"/>
      <classpath>
        <pathelement location="build/classes"/>
      </classpath>
    </java>
  </target>
<!-- =================================================================== -->
<!-- (Step 3 for remote) Compile the remote classes                      -->
<!-- =================================================================== -->
  <target name="compile.remote" description="Compile the remote classes" depends="init,generate.remote">
    <javac destdir="build/classes"
           classpathref="classpath"
           debug="yes"
           source="1.5"
           optimize="yes">
      <src path="build/src"/>
      <src path="src"/>
      <include name="org/mmbase/bridge/remote/*.java"/>
      <include name="org/mmbase/bridge/remote/rmi/*.java"/>
      <include name="org/mmbase/bridge/remote/implementation/*.java"/>
    </javac>
    <!-- rmic base="build/classes" sourcebase="build/classes" classpathref="classpath">
      <include name="org/mmbase/bridge/remote/rmi/*.class"/>
      <classpath>
        <pathelement location="build/classes"/>
      </classpath>
    </rmic -->
    <javac destdir="build/classes"
          classpathref="classpath"
          debug="yes"
          source="1.5"
          optimize="yes">
      <src path="build/src"/>
      <src path="src"/>
      <include name="org/mmbase/bridge/ContextProvider.java"/>
      <include name="org/mmbase/module/RemoteMMCI.java"/>
    </javac>
  </target>
<!-- =================================================================== -->
<!-- Create mmbase-rmmci.jar                                             -->
<!-- =================================================================== -->
  <target name="rmmci" depends="compile.remote,jar.uptodatecheck" unless="jar.uptodate">
    <mkdir dir="build/rmmcitmp"/>
    <unjar src="${build.dir}/lib/servlet.jar" dest="build/rmmcitmp"/>
    <unjar src="${xml-apis.jar}" dest="build/rmmcitmp"/>
    <echo file="build/rmmcitmp/manifest.mf">
Name: org/mmbase
Vendor: MMBase Community
URL: http://www.mmbase.org
Comment: The Remote MMBase Cloud Interfaces to connect to MMBase.
Version: ${distro}.${builddate}
Distribution: ${distro}
Build-by: ${ant.version}
Build-java-version: ${ant.java.version}
Build-compiler: ${build.compiler}
</echo>
    <copy todir="build/classes">
      <mapper type="glob" from="*" to="org/mmbase/config/*" />
      <fileset dir="config" includes="**">
      </fileset>
    </copy>

    <jar jarfile="${project.jar.dir}/mmbase-rmmci-server.jar" manifest="build/rmmcitmp/manifest.mf">
      <fileset dir="build/classes">
        <include name="org/mmbase/**"/>
      </fileset>
    </jar>
    <unjar src="${build.dir}/mmbase.jar" dest="build/rmmcitmp"/>
    <jar jarfile="${project.jar.dir}/mmbase-rmmci.jar" manifest="build/rmmcitmp/manifest.mf">
      <fileset dir="build/classes">
        <include name="org/mmbase/bridge/remote/*"/>
        <include name="org/mmbase/bridge/remote/rmi/*"/>
        <include name="org/mmbase/bridge/remote/util/*"/>
        <include name="org/mmbase/bridge/remote/implementation/*"/>
      </fileset>
      <fileset dir="build/rmmcitmp">
        <include name="org/mmbase/bridge/*"/>                           <!-- of course -->
        <include name="org/mmbase/bridge/util/**"       />              <!-- not essential, but the idea is that you could use those with any bridge impl, so you should want them -->
        <include name="org/mmbase/storage/search/*"/>                   <!-- those interfaces are  part of bridge -->
        <include name="org/mmbase/datatypes/**" />                      <!-- datatype classes are bridge -->
        <include name="org/mmbase/security/UserContext.class"/>         <!-- security classes are bridge -->
        <include name="org/mmbase/security/AuthenticationData*.class"/> <!-- security classes are bridge -->
        <include name="org/mmbase/security/Rank.class"/>                <!-- security classes are bridge -->
        <include name="org/mmbase/security/SecurityException.class"/>   <!-- security classes are bridge -->

        <include name="org/mmbase/util/functions/**" />                 <!-- functions are bridge -->

        <include name="org/mmbase/cache/CachePolicy*" />                <!-- used in bridge -->
        <include name="org/mmbase/cache/Cache*" />                      <!-- used by SortedBundle, but any how it is utility -->
        <include name="org/mmbase/cache/**" />                           <!-- used by SortedBundle, but any how it is utility -->
        <include name="org/mmbase/util/LRUHashtable*" />                <!-- cache implementation -->

        <!-- perhaps we need _all_ of util ? -->
        <include name="org/mmbase/util/logging/**"/>                    <!-- every class use, and it's no real burden to have it -->
        <include name="org/mmbase/util/ResourceLoader*.class"/>         <!-- well... -->
        <include name="org/mmbase/util/ResourceWatcher*.class"/>        <!--  -->
        <include name="org/mmbase/util/LocalizedString.class"/>           <!-- returned by bridge -->
        <include name="org/mmbase/util/ReplacingLocalizedString*.class"/> <!-- returned by bridge -->
        <include name="org/mmbase/util/EncodingDetectingOutputStreamWriter.class"/> <!-- used by resourceloader -->
        <include name="org/mmbase/util/FileWatcher*.class"/>               <!-- used by resourceloader -->
        <include name="org/mmbase/util/Entry.class"/>                      <!-- used by LocalizedString -->
        <include name="org/mmbase/util/LocalizedEntryListFactory*.class"/> <!-- returned by DataType -->
        <include name="org/mmbase/util/SortedBundle*.class"/>              <!-- Used by LocalizedEntryListFactory -->
        <include name="org/mmbase/util/ChainedIterator*.class"/>              <!-- Used by LocalizedEntryListFactory -->
        <include name="org/mmbase/util/SizeMeasurable.class"/>             <!-- implemented by several class -->
        <include name="org/mmbase/util/Casting*.class"/>                   <!-- widely used -->
        <include name="org/mmbase/util/StringBuilderWriter.class"/>        <!-- used by Casting -->
        <include name="org/mmbase/util/StringBufferWriter.class"/>         <!-- used by Datatype Restrictions -->
        <include name="org/mmbase/util/WrappedLocalizedString.class"/>    <!-- used by Casting -->
        <include name="org/mmbase/util/Encode.class"/>                     <!-- general utility -->
        <include name="org/mmbase/util/transformers/**.class"/>            <!-- used by Encode -->
        <include name="org/mmbase/util/xml/**"/>
        <include name="org/mmbase/util/XMLEntityResolver*.class"/>          <!-- -->
        <include name="org/mmbase/util/XMLErrorHandler.class"/>             <!-- -->
        <include name="org/mmbase/util/DynamicDate.class"/>                <!-- used by Casting -->
        <include name="org/mmbase/util/DateFormats*.class"/>
        <include name="org/mmbase/util/dateparser/**"/>                    <!-- used by Casting -->
        <include name="org/mmbase/util/HashCodeUtil*"/>                    <!-- used by SortedBundle, but is generic tool-->
        <include name="org/mmbase/util/PublicCloneable*"/>                    <!-- used by SortedBundle, but is generic tool-->


        <include name="org/mmbase/storage/Storable.class"/>                <!-- DataTypes uses .. -->
        <include name="org/mmbase/storage/StorageException.class"/>        <!--  -->

        <include name="org/mmbase/core/util/Fields.class"/>                <!-- DataTypes uses .. -->
        <include name="org/mmbase/core/*.class"/>                          <!-- DataTypes uses .. -->
        <include name="org/mmbase/core/event/**"/>                          <!--  -->

        <include name="org/mmbase/module/core/MMBaseObserver.class"/>      <!-- resourcewatcher extends -->
        <include name="org/mmbase/module/corebuilders/FieldDefs.class"/>   <!-- DataTypes uses .. -->

        <include name="org/mmbase/util/RandomPool*"/>                      <!-- Used in test cases .. -->
        <include name="org/mmbase/util/PasswordGenerator*"/>               <!-- Used in test cases .. -->
        <include name="org/mmbase/config/functions/**"/>                   <!-- Used in test cases .. -->


        <!-- external interfaces used by bridge, but not always present client side, so provide them. -->
        <include name="org/w3c/dom/Document.class"/>
        <include name="org/w3c/dom/Node.class"/>
        <include name="org/w3c/dom/Element.class"/>
        <include name="javax/servlet/ServletRequest.class"/>
        <include name="javax/servlet/ServletResponse.class"/>
        <include name="javax/servlet/http/HttpServletRequest.class"/>
        <include name="javax/servlet/http/HttpServletResponse.class"/>
      </fileset>
    </jar>
    <delete dir="build/rmmcitmp"/>
  </target>
<!-- =================================================================== -->
<!-- Clean the remote-classes                                            -->
<!-- =================================================================== -->
  <target name="clean">
    <delete failonerror="false" dir="build"/>
  </target>

  <target name="install" depends="rmmci">
    <copy todir="${build.dir}/mmbase/mmbase-webapp/WEB-INF/lib" file="${project.jar.dir}/mmbase-rmmci-server.jar"/>
  </target>
</project>
